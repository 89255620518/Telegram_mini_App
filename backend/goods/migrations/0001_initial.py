# Generated by Django 4.2 on 2025-07-02 09:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DishType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Тип блюда')),
            ],
            options={
                'verbose_name': 'Тип блюда',
                'verbose_name_plural': 'Типы блюд',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=355, verbose_name='Название блюда')),
                ('description', models.CharField(max_length=355, verbose_name='Описание блюда')),
                ('compound', models.CharField(max_length=500, verbose_name='Состав блюда')),
                ('weight', models.IntegerField(verbose_name='Вес блюда')),
                ('calories', models.IntegerField(verbose_name='Калорийность')),
                ('price', models.IntegerField(verbose_name='Цена блюда')),
                ('count', models.IntegerField(default=1, verbose_name='Количество блюда')),
            ],
            options={
                'verbose_name': 'Блюдо',
                'verbose_name_plural': 'Блюда',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата заказа')),
                ('total_price', models.IntegerField(verbose_name='Итоговая цена')),
                ('cutlery', models.IntegerField(verbose_name='Столовые приборы')),
                ('delivery_cost', models.IntegerField(verbose_name='Цена доставки')),
                ('fio', models.CharField(max_length=255, verbose_name='Ф.И.О.')),
                ('email', models.EmailField(db_index=True, max_length=255, validators=[django.core.validators.EmailValidator()], verbose_name='Почта')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес доставки')),
                ('delivery_time', models.CharField(max_length=50, verbose_name='Время доставки')),
                ('payment_method', models.CharField(max_length=100, verbose_name='Метод оплаты')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название акции')),
            ],
            options={
                'verbose_name': 'Акция',
                'verbose_name_plural': 'Акции',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=1, verbose_name='Количество блюд')),
                ('price', models.IntegerField(verbose_name='Цена блюда')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart_goods', to='goods.goods', verbose_name='Покупка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to=settings.AUTH_USER_MODEL, verbose_name='Список покупок')),
            ],
            options={
                'verbose_name': 'Покупка',
                'verbose_name_plural': 'Покупки',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('hall', 'Зал'), ('veranda', 'Веранда')], max_length=50, verbose_name='Тип помещения')),
                ('table_number', models.IntegerField(verbose_name='Номер стола')),
                ('date_time', models.CharField(max_length=50, verbose_name='Дата и время бронирования')),
                ('num_people', models.IntegerField(verbose_name='Количество человек')),
                ('name', models.CharField(max_length=255, verbose_name='Имя * бронирующего')),
                ('email', models.EmailField(max_length=254, verbose_name='Email бронирующего')),
                ('phone', models.CharField(max_length=15, verbose_name='Телефон')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('status', models.CharField(choices=[('booked', 'Забронирован'), ('available', 'Свободен')], default='available', max_length=20, verbose_name='Статус')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Бронирующий')),
            ],
            options={
                'verbose_name': 'Бронирование стола',
                'verbose_name_plural': 'Бронирование столов',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goods.goods')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='goods.order')),
            ],
            options={
                'verbose_name': 'Товар в заказе',
                'verbose_name_plural': 'Товары в заказе',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='goods',
            field=models.ManyToManyField(through='goods.OrderItem', to='goods.goods'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Покупатель'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(upload_to='backend_media/', verbose_name='Изображение')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='goods.goods', verbose_name='Блюдо')),
            ],
        ),
        migrations.AddField(
            model_name='goods',
            name='image',
            field=models.ManyToManyField(blank=True, related_name='goods_img', to='goods.image'),
        ),
        migrations.AddField(
            model_name='goods',
            name='promotion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goods.promotion', verbose_name='Акция блюда'),
        ),
        migrations.AddField(
            model_name='goods',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='goods.dishtype', verbose_name='Тип блюда'),
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_favorites', to='goods.goods')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранные',
            },
        ),
        migrations.AddConstraint(
            model_name='shoppingcart',
            constraint=models.UniqueConstraint(fields=('goods', 'user'), name='shopping_cart_unique'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('goods', 'user'), name='favorite_unique'),
        ),
    ]
